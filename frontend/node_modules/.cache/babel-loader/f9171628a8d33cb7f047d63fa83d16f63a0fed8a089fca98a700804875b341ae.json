{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbaz\\\\OneDrive\\\\Desktop\\\\StringCalculater\\\\frontend\\\\src\\\\components\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Importing necessary hooks from React\nimport axios from \"axios\"; // Importing axios for making HTTP requests\nimport \"./Calculator.css\"; // Importing CSS for styling the Calculator component\n\n// Calculator component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  // State to manage input value from the user\n  const [input, setInput] = useState(\"\");\n\n  // State to store the result of the calculation\n  const [result, setResult] = useState(null);\n  a;\n\n  // State to handle any error messages\n  const [error, setError] = useState(\"\");\n\n  // Function to handle the calculation when the button is clicked\n  const handleCalculate = async () => {\n    setError(\"\"); // Reset any previous error message\n    setResult(null); // Reset the result before calculating\n    try {\n      // Making a POST request to the backend API with the input numbers\n      const response = await axios.post(\"http://localhost:5000/api/calculate\", {\n        numbers: input // Sending the user input as the request body\n      });\n      // If successful, update the result state with the response data\n      setResult(response.data.result);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // If an error occurs, set the error state with the error message from the response\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"String Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input // Binding the input field to the input state\n      ,\n      onChange: e => setInput(e.target.value) // Updating state on input change\n      ,\n      placeholder: \"Enter numbers\" // Placeholder text for the input field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"Ncb+uFw4n9aHHZX8cmZ9EDAaHMY=\");\n_c = Calculator;\nexport default Calculator; // Exporting the Calculator component for use in other parts of the app\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Calculator","_s","input","setInput","result","setResult","a","error","setError","handleCalculate","response","post","numbers","data","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/arbaz/OneDrive/Desktop/StringCalculater/frontend/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from \"react\"; // Importing necessary hooks from React\r\nimport axios from \"axios\"; // Importing axios for making HTTP requests\r\nimport \"./Calculator.css\"; // Importing CSS for styling the Calculator component\r\n\r\n// Calculator component\r\nconst Calculator = () => {\r\n  // State to manage input value from the user\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // State to store the result of the calculation\r\n  const [result, setResult] = useState(null);a\r\n\r\n  // State to handle any error messages\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Function to handle the calculation when the button is clicked\r\n  const handleCalculate = async () => {\r\n    setError(\"\"); // Reset any previous error message\r\n    setResult(null); // Reset the result before calculating\r\n    try {\r\n      // Making a POST request to the backend API with the input numbers\r\n      const response = await axios.post(\"http://localhost:5000/api/calculate\", {\r\n        numbers: input, // Sending the user input as the request body\r\n      });\r\n      // If successful, update the result state with the response data\r\n      setResult(response.data.result);\r\n    } catch (err) {\r\n      // If an error occurs, set the error state with the error message from the response\r\n      setError(err.response?.data?.error || \"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>String Calculator</h1>\r\n      {/* Input field for the user to enter numbers */}\r\n      <input\r\n        type=\"text\"\r\n        value={input} // Binding the input field to the input state\r\n        onChange={(e) => setInput(e.target.value)} // Updating state on input change\r\n        placeholder=\"Enter numbers\" // Placeholder text for the input field\r\n      />\r\n      {/* Button to trigger the calculation */}\r\n      <button onClick={handleCalculate}>Calculate</button>\r\n      {/* Displaying the result if it's not null */}\r\n      {result !== null && <h2>Result: {result}</h2>}\r\n      {/* Displaying the error message if there is an error */}\r\n      {error && <h3>{error}</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator; // Exporting the Calculator component for use in other parts of the app\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,kBAAkB,CAAC,CAAC;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAACU,CAAC;;EAE5C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdH,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,IAAI;MACF;MACA,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,qCAAqC,EAAE;QACvEC,OAAO,EAAEV,KAAK,CAAE;MAClB,CAAC,CAAC;MACF;MACAG,SAAS,CAACK,QAAQ,CAACG,IAAI,CAACT,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOU,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ;MACAR,QAAQ,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACJ,QAAQ,cAAAK,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBT,KAAK,KAAI,mBAAmB,CAAC;IAC5D;EACF,CAAC;EAED,oBACER,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,KAAM,CAAC;MAAA;MACduB,QAAQ,EAAGC,CAAC,IAAKvB,QAAQ,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAC3CI,WAAW,EAAC,eAAe,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eAEFvB,OAAA;MAAQ8B,OAAO,EAAEpB,eAAgB;MAAAS,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEnDlB,MAAM,KAAK,IAAI,iBAAIL,OAAA;MAAAmB,QAAA,GAAI,UAAQ,EAACd,MAAM;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAE5Cf,KAAK,iBAAIR,OAAA;MAAAmB,QAAA,EAAKX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7CID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA+ChB,eAAeA,UAAU,CAAC,CAAC;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}